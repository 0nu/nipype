# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from ....testing import assert_equal
from ..utils import MakeSurfaces


def test_MakeSurfaces_inputs():
    input_map = dict(args=dict(argstr='%s',
    ),
    copy_inputs=dict(mandatory=False,
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    fix_mtl=dict(argstr='-fix_mtl',
    mandatory=False,
    ),
    hemisphere=dict(argstr='%s',
    mandatory=True,
    position=-1,
    ),
    ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    in_T1=dict(argstr='-T1 %s',
    mandatory=False,
    ),
    in_aseg=dict(argstr='-aseg %s',
    mandatory=False,
    ),
    in_filled=dict(mandatory=True,
    ),
    in_label=dict(mandatory=False,
    xor=['noaparc'],
    ),
    in_orig=dict(argstr='-orig %s',
    mandatory=True,
    ),
    in_wm=dict(mandatory=True,
    ),
    longitudinal=dict(argstr='-long',
    ),
    maximum=dict(argstr='-max %.1f',
    ),
    mgz=dict(argstr='-mgz',
    mandatory=False,
    ),
    no_white=dict(argstr='-nowhite',
    mandatory=False,
    ),
    noaparc=dict(argstr='-noaparc',
    mandatory=False,
    xor=['in_label'],
    ),
    orig_pial=dict(argstr='-orig_pial %s',
    mandatory=False,
    requires=['in_label'],
    ),
    orig_white=dict(argstr='-orig_white %s',
    mandatory=False,
    ),
    subject_id=dict(argstr='%s',
    mandatory=True,
    position=-2,
    usedefault=True,
    ),
    subjects_dir=dict(),
    terminal_output=dict(nohash=True,
    ),
    white_only=dict(argstr='-whiteonly',
    mandatory=False,
    ),
    )
    inputs = MakeSurfaces.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(inputs.traits()[key], metakey), value


def test_MakeSurfaces_outputs():
    output_map = dict(out_area=dict(),
    out_cortex=dict(),
    out_curv=dict(),
    out_pial=dict(),
    out_thickness=dict(),
    out_white=dict(),
    )
    outputs = MakeSurfaces.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(outputs.traits()[key], metakey), value
