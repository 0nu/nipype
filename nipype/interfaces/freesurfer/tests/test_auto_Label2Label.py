# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from ....testing import assert_equal
from ..model import Label2Label


def test_Label2Label_inputs():
    input_map = dict(args=dict(argstr='%s',
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    hemisphere=dict(argstr='--hemi %s',
    mandatory=True,
    ),
    ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    label=dict(mandatory=True,
    ),
    registration_method=dict(argstr='--regmethod %s',
    genfile=True,
    mandatory=False,
    ),
    source_label=dict(argstr='--srclabel %s',
    genfile=True,
    mandatory=False,
    ),
    source_subject=dict(argstr='--srcsubject %s',
    genfile=True,
    mandatory=False,
    ),
    sphere_reg=dict(mandatory=True,
    ),
    subject_id=dict(argstr='--trgsubject %s',
    mandatory=True,
    ),
    subjects_dir=dict(),
    target_label=dict(argstr='--trglabel %s',
    genfile=True,
    mandatory=False,
    ),
    terminal_output=dict(nohash=True,
    ),
    threshold=dict(mandatory=False,
    ),
    white=dict(mandatory=True,
    ),
    )
    inputs = Label2Label.input_spec()

    for key, metadata in list(input_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(inputs.traits()[key], metakey), value


def test_Label2Label_outputs():
    output_map = dict(out_file=dict(),
    )
    outputs = Label2Label.output_spec()

    for key, metadata in list(output_map.items()):
        for metakey, value in list(metadata.items()):
            yield assert_equal, getattr(outputs.traits()[key], metakey), value
