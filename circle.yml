machine:
  services:
    - docker

dependencies:
  cache_directories:
    - "~/docker"

  pre:
    - pip install coverage
    - mkdir -p "~/scratch/nose"
  override:
    - if [[ -e ~/docker/image.tar ]]; then docker load -i ~/docker/image.tar; fi
    - docker info
    - docker pull nipype/testnipypedata :
        timeout: 1000
    - mkdir -p ~/docker; docker save nipype/testnipypedata > ~/docker/image.tar
    - docker build -t nipype/testbench .

test:
  override:
    - docker run -i -v /etc/localtime:/etc/localtime:ro -v ~/scratch:/scratch -w /scratch nipype/testbench test_spm Linear workflow3d workflow4d :
        timeout: 1600
    - docker run -i -v /etc/localtime:/etc/localtime:ro -v ~/scratch:/scratch -w /scratch nipype/testbench fmri_fsl_feeds Linear l1pipeline
    - docker run -i -v /etc/localtime:/etc/localtime:ro -v ~/scratch:/scratch -w /scratch nipype/testbench fmri_spm_dartel Linear level1 l2pipeline :
        timeout: 1600
    - docker run -i -v /etc/localtime:/etc/localtime:ro -v ~/scratch:/scratch -w /scratch nipype/testbench fmri_fsl_reuse Linear level1_workflow
    - docker run -i -v /etc/localtime:/etc/localtime:ro -v ~/scratch:/scratch -w /scratch nipype/testbench fmri_spm_nested Linear level1 l2pipeline

# general:
#   artifacts:
#     - "doc/_build/html"
#     - "~/log.txt"
#    - "nosetests.xml"
#    - "coverage.xml"
